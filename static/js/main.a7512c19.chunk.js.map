{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","className","name","href","email","body","CommentList","comments","length","map","id","UserInfo","user","PostInfo","post","title","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"018IAAaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGD,EAAQE,OAGV,OAED,mBACED,UAAU,qBACVE,KAAI,iBAAYH,EAAQI,OAF1B,SAIGJ,EAAQI,WAIb,qBAAKH,UAAU,oBAAf,SACGD,EAAQK,WCfFC,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5B,OAAKA,EAASC,OASZ,qBAAKP,UAAU,cAAf,SAEIM,EAASE,KAAI,SAAAT,GAAO,OAClB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQU,SAVhD,mBAAG,UAAQ,oBAAX,8BCJOC,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,8BACG,eAED,mBAAGX,UAAU,WAAWE,KAAI,iBAAYS,EAAKR,OAA7C,SACGQ,EAAKV,YCHCW,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBC,EAIED,EAJFC,MACAV,EAGES,EAHFT,KACAE,EAEEO,EAFFP,SACAK,EACEE,EADFF,KAGF,OACE,sBAAKX,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGc,IAGH,4BACE,cAAC,EAAD,CAAUH,KAAMA,SAIpB,mBAAGX,UAAU,iBAAb,SACGI,IAGH,uBAEA,cAAC,EAAD,CAAaE,SAAUA,QC5BhBS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKhB,UAAU,WAAf,SACGgB,EAAMR,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,UCYtC,IAAMO,EAAQC,EAAgBT,KAAI,SAAAK,GAAI,kCACjCA,GADiC,IAEpCF,MAZoBO,EAYDL,EAAKK,OAXjBC,EAAgBC,MAAK,qBAAGX,KAAgBS,MAC1C,MAWLZ,UAR4Be,EAQGR,EAAKJ,GAP7Ba,EAAmBC,QAAO,SAAAxB,GAAO,OAAIA,EAAQsB,SAAWA,MAC1D,QAFP,IAA8BA,EALRH,KAgBTM,EAAM,kBACjB,0BAASxB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUgB,MAAOA,QCvBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a7512c19.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">\n        {comment.name}\n      </strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${comment.email}`}\n      >\n        {comment.email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {comment.body}\n    </div>\n  </div>\n);\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => {\n  if (!comments.length) {\n    return (\n      <b data-cy=\"NoCommentsMessage\">\n        No comments yet\n      </b>\n    );\n  }\n\n  return (\n    <div className=\"CommentList\">\n      {\n        comments.map(comment => (\n          <CommentInfo comment={comment} key={comment.id} />\n        ))\n      }\n    </div>\n  );\n};\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <p>\n    {' Posted by  '}\n\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  </p>\n);\n","import './PostInfo.scss';\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({ post }) => {\n  const {\n    title,\n    body,\n    comments,\n    user,\n  } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">\n          {title}\n        </h3>\n\n        <p>\n          <UserInfo user={user} />\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n\n      <hr />\n\n      <CommentList comments={comments} />\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction findUserById(userId) {\n  return usersFromServer.find(({ id }) => id === userId)\n    || null;\n}\n\nfunction findCommentsByPostId(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId)\n    || null;\n}\n\nconst posts = postsFromServer.map(post => ({\n  ...post,\n  user: findUserById(post.userId),\n  comments: findCommentsByPostId(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}